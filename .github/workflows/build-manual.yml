name: manual build and release

on:
  workflow_dispatch:
    inputs:
      release_tag_suffix:
        description: 'prefix'
        required: false
        default: ''

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.target_branch }}
      
      - name: Enchant permission
        run: chmod +x gradlew
      
      - name: Setting java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Setting gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: '8.1.1'
      
      - name: Build gradle project
        run: |
          ./gradlew build --stacktrace
      
      - name: Find main jar for release naming
        id: find_jar
        run: |
          JAR_FILE=$(find build/libs -name "*.jar" -print -quit)
          if [ -z "$JAR_FILE" ]; then
            echo "::warning::Cannot find a representative jar for naming, proceeding without it."
            echo "jar_name_without_extension=no-main-jar" >> "$GITHUB_OUTPUT"
          else
            echo "Found representative jar: $JAR_FILE"
            JAR_NAME=$(basename "$JAR_FILE")
            JAR_NAME_WITHOUT_EXT="${JAR_NAME%.jar}"
            echo "jar_name_without_extension=$JAR_NAME_WITHOUT_EXT" >> "$GITHUB_OUTPUT"
          fi
          echo "jar_path=$JAR_FILE" >> "$GITHUB_OUTPUT"
      
      - name: Create release info
        id: generate_release_info
        run: |
          BRANCH_NAME_SLUGGED=$(echo "${{ github.event.inputs.target_branch }}" | tr '/' '-') # 브랜치 이름을 URL 친화적인 형태로 변환
          COMMIT_SHA_SHORT=$(echo "${{ github.sha }}" | cut -c1-7) # 커밋 SHA의 앞 7자리 사용
          DATE_ONLY=$(date +%Y%m%d) # 날짜만 가져옵니다 (YYYYMMDD 형식)
          
          # 릴리즈 이름 및 태그의 기본 형식: build-{branch}-{date}-{hash}
          BASE_NAME="build-${BRANCH_NAME_SLUGGED}-${DATE_ONLY}-${COMMIT_SHA_SHORT}"
          
          # suffix가 있을 경우 추가합니다.
          RELEASE_FULL_NAME="$BASE_NAME"
          if [ -n "${{ github.event.inputs.release_tag_suffix }}" ]; then
            RELEASE_FULL_NAME="${RELEASE_FULL_NAME}-${{ github.event.inputs.release_tag_suffix }}"
          fi
          
          echo "generated_tag=$RELEASE_FULL_NAME" >> "$GITHUB_OUTPUT" # 태그와 이름 모두 동일한 형식으로
          echo "generated_name=$RELEASE_FULL_NAME" >> "$GITHUB_OUTPUT"
          echo "formatted_timestamp=$(date +%Y-%m-%d\ %H:%M:%S)" >> "$GITHUB_OUTPUT" # 릴리즈 본문용 전체 타임스탬프
      
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.generate_release_info.outputs.generated_tag }}
          name: ${{ steps.generate_release_info.outputs.generated_name }}
          body: |
            This release based on branch **${{ github.event.inputs.target_branch }}**
            Commit SHA: `${{ github.sha }}`
            Included files from `build/libs/` directory.
            Trigger time: `${{ steps.generate_release_info.outputs.formatted_timestamp }}`
            Suffix: `${{ github.event.inputs.release_tag_suffix }}`
          draft: false
          prerelease: true
          files: build/libs/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
